{"version":3,"sources":["components/Header.js","components/CarBrand.js","components/CarModel.js","components/CarFuelType.js","components/ConfirmButton.js","components/SummaryForm.js","containers/FormContent.js","store/actions/actions.js","store/actionTypes.js","API_DATA/api_data.js","containers/App.js","store/reducers/carReducer.js","store/reducers/rootReducer.js","index.js"],"names":["useStyles","makeStyles","theme","header","flexGrow","height","padding","backgroundColor","borderRadius","display","flexDirection","justifyContent","alignItems","color","Header","classes","Fragment","className","Typography","variant","textfield","width","input","CarBrand","handleChangeBrand","carBrands","selectedCarBrand","isLoading","TextField","select","label","margin","onChange","value","InputProps","map","brand","MenuItem","key","make_name","menuItem","CarModel","handleChangeModel","carModels","selectedCarModel","isOpen","disabled","car","model_name","CarFuelType","handleChangeFuelType","fuelTypes","selectedFuelType","fuel_name","button","paddingLeft","paddingRight","borderColor","ConfirmButton","carBrand","carModel","buttonText","URL","Button","href","summaryForm","SummaryForm","fuelType","Paper","content","marginTop","connect","state","cars","carFuelType","textFieldCarModelsOpen","carModelsTextFieldEnabled","textFieldFuelTypeOpen","carFuelTypeTextFieldEnabled","loadingBrands","loadingModels","loadingCarFuelType","dispatch","getCarBrandsBegin","type","getCarBrandsSucceed","payload","getCarBrandsFailed","err","getCarModelsBegin","getCarModelsSucceed","getCarModelsFailed","getCarFuelTypeBegin","getCarFuelTypeSucceed","getCarFuelTypeFailed","API_KEY","API_URL","urlCTA","useEffect","fetch","method","headers","Headers","Authorization","then","response","json","data","catch","error","useState","values","setValues","localStorage","setItem","getItem","handleChange","name","event","target","root","border","paddingBottom","maxWidth","fontFamily","App","CssBaseline","container","headerStyle","initialState","carReducer","action","combineReducers","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f45d4918.chunk.js","sourcesContent":["import React from 'react';\r\nimport Grid from '@material-ui/core/Container';\r\nimport { Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  header: {\r\n    flexGrow: 1,\r\n    height: '230px',\r\n    padding: 0,\r\n    backgroundColor: '#f5f5f5',\r\n    borderRadius: '0 0 50% 50%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    color: '#0a2c48',\r\n  },\r\n}));\r\n\r\nconst Header = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid className={classes.header}>\r\n        <Typography variant=\"h6\">Zadanie rekrutacyjne</Typography>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  textfield: {\r\n    width: '100%',\r\n  },\r\n  input: {\r\n    backgroundColor: '#eeeeee',\r\n    '&.Mui-disabled': {\r\n      backgroundColor: '#fafafa',\r\n    },\r\n  },\r\n}));\r\n\r\nconst CarBrand = ({\r\n  handleChangeBrand,\r\n  carBrands,\r\n  selectedCarBrand,\r\n  isLoading,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TextField\r\n        select\r\n        label=\"Marka\"\r\n        margin=\"normal\"\r\n        variant=\"filled\"\r\n        className={classes.textfield}\r\n        onChange={handleChangeBrand('carBrand')}\r\n        value={selectedCarBrand}\r\n        InputProps={{\r\n          className: classes.input,\r\n        }}\r\n      >\r\n        {carBrands.map(brand => (\r\n          <MenuItem\r\n            key={brand.make_name}\r\n            value={brand.make_name}\r\n            className={classes.menuItem}\r\n          >\r\n            {brand.make_name}\r\n          </MenuItem>\r\n        ))}\r\n      </TextField>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CarBrand;\r\n","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  textfield: {\r\n    width: '100%',\r\n  },\r\n  input: {\r\n    backgroundColor: '#eeeeee',\r\n    '&.Mui-disabled': {\r\n      backgroundColor: '#fafafa',\r\n    },\r\n  },\r\n}));\r\n\r\nconst CarModel = ({\r\n  handleChangeModel,\r\n  carModels,\r\n  selectedCarModel,\r\n  isOpen,\r\n  isLoading,\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <React.Fragment>\r\n      <TextField\r\n        select\r\n        disabled={isOpen ? false : true}\r\n        label={'Model'}\r\n        margin=\"normal\"\r\n        variant=\"filled\"\r\n        className={classes.textfield}\r\n        onChange={handleChangeModel('carModel')}\r\n        value={selectedCarModel}\r\n        InputProps={{\r\n          className: classes.input,\r\n        }}\r\n      >\r\n        {carModels &&\r\n          carModels.map(car => (\r\n            <MenuItem\r\n              key={car.model_name}\r\n              value={car.model_name}\r\n              className={classes.menuItem}\r\n            >\r\n              {car.model_name}\r\n            </MenuItem>\r\n          ))}\r\n      </TextField>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CarModel;\r\n","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  textfield: {\r\n    width: '100%',\r\n  },\r\n  input: {\r\n    backgroundColor: '#eeeeee',\r\n    '&.Mui-disabled': {\r\n      backgroundColor: '#fafafa',\r\n    },\r\n  },\r\n}));\r\n\r\nconst CarFuelType = ({\r\n  handleChangeFuelType,\r\n  fuelTypes,\r\n  selectedFuelType,\r\n  isOpen,\r\n  isLoading,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TextField\r\n        select\r\n        disabled={isOpen ? false : true}\r\n        label=\"Typ paliwa\"\r\n        margin=\"normal\"\r\n        variant=\"filled\"\r\n        onChange={handleChangeFuelType('fuelType')}\r\n        value={selectedFuelType}\r\n        className={classes.textfield}\r\n        InputProps={{\r\n          className: classes.input,\r\n        }}\r\n      >\r\n        {fuelTypes &&\r\n          fuelTypes.map(car => (\r\n            <MenuItem\r\n              key={car.fuel_name}\r\n              value={car.fuel_name}\r\n              className={classes.menuItem}\r\n            >\r\n              {car.fuel_name}\r\n            </MenuItem>\r\n          ))}\r\n      </TextField>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CarFuelType;\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport ArrowForwardOutlinedIcon from '@material-ui/icons/ArrowForwardOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  button: {\r\n    margin: '20px 0',\r\n    backgroundColor: '#ffcc00',\r\n    width: '100%',\r\n    borderRadius: '20px',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    paddingLeft: '1.5rem',\r\n    paddingRight: '1.5rem',\r\n    '&:hover': {\r\n      backgroundColor: '#f9a825',\r\n      borderColor: '#f9a825',\r\n    },\r\n  },\r\n}));\r\nconst ConfirmButton = ({\r\n  isOpen,\r\n  carBrand,\r\n  carModel,\r\n  buttonText,\r\n  URL,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Button\r\n        variant=\"contained\"\r\n        className={classes.button}\r\n        disabled={isOpen ? false : true}\r\n        href={`${URL}?make_name=${carBrand}&model_name=${carModel}`}\r\n      >\r\n        {buttonText}\r\n        <ArrowForwardOutlinedIcon />\r\n      </Button>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ConfirmButton;\r\n","import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  summaryForm: {\r\n    flexGrow: 1,\r\n    padding: 10,\r\n    margin: '20px 0',\r\n    backgroundColor: '#ffecb3',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'flex-start',\r\n    color: '#0a2c48',\r\n  },\r\n}));\r\n\r\nconst SummaryForm = ({ carBrand, carModel, fuelType, isOpen }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {isOpen && (\r\n        <Paper className={classes.summaryForm}>\r\n          <Typography variant=\"subtitle2\">\r\n            Wybrana marka: {carBrand}\r\n          </Typography>\r\n          <Typography variant=\"subtitle2\">\r\n            Wybrany model: {carModel}\r\n          </Typography>\r\n          <Typography variant=\"subtitle2\">\r\n            Typ paliwa: {fuelType}\r\n          </Typography>\r\n        </Paper>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SummaryForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Grid from '@material-ui/core/Container';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CarBrand from '../components/CarBrand';\r\nimport CarModel from '../components/CarModel';\r\nimport CarFuelType from '../components/CarFuelType';\r\nimport ConfirmButton from '../components/ConfirmButton';\r\n\r\nimport {\r\n  getCarBrandsBegin,\r\n  getCarBrandsSucceed,\r\n  getCarBrandsFailed,\r\n  getCarModelsBegin,\r\n  getCarModelsSucceed,\r\n  getCarModelsFailed,\r\n  getCarFuelTypeBegin,\r\n  getCarFuelTypeSucceed,\r\n  getCarFuelTypeFailed,\r\n} from '../store/actions/actions';\r\nimport SummaryForm from '../components/SummaryForm';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '60%',\r\n    width: '100%',\r\n    marginTop: '20px',\r\n  },\r\n}));\r\n\r\nconst FormContent = ({\r\n  getCarBrandsBegin,\r\n  getCarBrandsSucceed,\r\n  getCarBrandsFailed,\r\n  getCarModelsBegin,\r\n  getCarModelsSucceed,\r\n  getCarModelsFailed,\r\n  getCarFuelTypeBegin,\r\n  getCarFuelTypeSucceed,\r\n  getCarFuelTypeFailed,\r\n  carBrands,\r\n  carModels,\r\n  fuelTypes,\r\n  textFieldCarModelsOpen,\r\n  textFieldFuelTypeOpen,\r\n  loadingBrands,\r\n  loadingModels,\r\n  loadingCarFuelType,\r\n  API_KEY,\r\n  API_URL,\r\n  urlCTA,\r\n}) => {\r\n  const classes = useStyles();\r\n  useEffect(() => {\r\n    getCarBrandsBegin();\r\n    fetch(`https://cors-anywhere.herokuapp.com/${API_URL}`, {\r\n      method: 'GET',\r\n      headers: new Headers({\r\n        Authorization: `Basic ${API_KEY}`,\r\n      }),\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        getCarBrandsSucceed(data);\r\n      })\r\n      .catch(error => {\r\n        getCarBrandsFailed(error);\r\n      });\r\n  }, []);\r\n\r\n  const getDataCarModels = carBrand => {\r\n    getCarModelsBegin();\r\n    fetch(\r\n      `https://cors-anywhere.herokuapp.com/${API_URL}/${carBrand}/models`,\r\n      {\r\n        method: 'GET',\r\n        headers: new Headers({\r\n          Authorization: `Basic ${API_KEY}`,\r\n        }),\r\n      },\r\n    )\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        getCarModelsSucceed(data);\r\n      })\r\n      .catch(error => {\r\n        getCarModelsFailed(error);\r\n      });\r\n  };\r\n\r\n  const getDataFuelType = (carBrand, carModel) => {\r\n    getCarFuelTypeBegin();\r\n    fetch(\r\n      `https://cors-anywhere.herokuapp.com/${API_URL}/${carBrand}/models/${carModel}/fuels/`,\r\n      {\r\n        method: 'GET',\r\n        headers: new Headers({\r\n          Authorization: `Basic ${API_KEY}`,\r\n        }),\r\n      },\r\n    )\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        getCarFuelTypeSucceed(data);\r\n      })\r\n      .catch(error => {\r\n        getCarFuelTypeFailed(error);\r\n      });\r\n  };\r\n\r\n  const [values, setValues] = useState({\r\n    carBrand: null,\r\n    carModel: null,\r\n    fuelType: null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (values.carBrand) {\r\n      getDataCarModels(values.carBrand);\r\n    }\r\n  }, [values.carBrand]);\r\n\r\n  useEffect(() => {\r\n    if (values.carBrand && values.carModel) {\r\n      getDataFuelType(values.carBrand, values.carModel);\r\n    }\r\n  }, [values.carModel]);\r\n\r\n  useEffect(() => {\r\n    if (values.carBrand) {\r\n      localStorage.setItem('carBrand', values.carBrand);\r\n    }\r\n  }, [values.carBrand]);\r\n\r\n  useEffect(() => {\r\n    if (localStorage) {\r\n      setValues({\r\n        carBrand: localStorage.getItem('carBrand'),\r\n      });\r\n    }\r\n  }, [localStorage]);\r\n\r\n  const handleChange = name => event => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid className={classes.content}>\r\n        <CarBrand\r\n          handleChangeBrand={handleChange}\r\n          carBrands={carBrands}\r\n          selectedCarBrand={values.carBrand}\r\n          isLoading={loadingBrands}\r\n        />\r\n        <CarModel\r\n          handleChangeModel={handleChange}\r\n          carModels={carModels}\r\n          selectedCarModel={values.carModel}\r\n          isOpen={textFieldCarModelsOpen}\r\n          isLoading={loadingModels}\r\n        />\r\n        <CarFuelType\r\n          handleChangeFuelType={handleChange}\r\n          fuelTypes={fuelTypes}\r\n          selectedFuelType={values.fuelType}\r\n          isOpen={textFieldFuelTypeOpen}\r\n          isLoading={loadingCarFuelType}\r\n        />\r\n        <SummaryForm\r\n          carBrand={values.carBrand}\r\n          carModel={values.carModel}\r\n          fuelType={values.fuelType}\r\n          isOpen={\r\n            values.carBrand && values.carModel && values.fuelType\r\n          }\r\n        />\r\n        <ConfirmButton\r\n          isOpen={values.carModel && values.fuelType}\r\n          carBrand={values.carBrand}\r\n          carModel={values.carModel}\r\n          URL={urlCTA}\r\n          buttonText={'OBLICZ SKŁADKĘ'}\r\n        />\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    carBrands: state.cars.carBrands,\r\n    carModels: state.cars.carModels,\r\n    fuelTypes: state.cars.carFuelType,\r\n    textFieldCarModelsOpen: state.cars.carModelsTextFieldEnabled,\r\n    textFieldFuelTypeOpen: state.cars.carFuelTypeTextFieldEnabled,\r\n    loadingBrands: state.cars.loadingBrands,\r\n    loadingModels: state.cars.loadingModels,\r\n    loadingCarFuelType: state.cars.loadingCarFuelType,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getCarBrandsBegin: () => {\r\n      dispatch(getCarBrandsBegin());\r\n    },\r\n    getCarBrandsSucceed: carBrands => {\r\n      dispatch(getCarBrandsSucceed(carBrands));\r\n    },\r\n    getCarBrandsFailed: err => {\r\n      dispatch(getCarBrandsFailed(err));\r\n    },\r\n    getCarModelsBegin: () => {\r\n      dispatch(getCarModelsBegin());\r\n    },\r\n    getCarModelsSucceed: carBrand => {\r\n      dispatch(getCarModelsSucceed(carBrand));\r\n    },\r\n    getCarModelsFailed: err => {\r\n      dispatch(getCarModelsFailed(err));\r\n    },\r\n    getCarFuelTypeBegin: () => {\r\n      dispatch(getCarFuelTypeBegin());\r\n    },\r\n    getCarFuelTypeSucceed: fuelType => {\r\n      dispatch(getCarFuelTypeSucceed(fuelType));\r\n    },\r\n    getCarFuelTypeFailed: err => {\r\n      dispatch(getCarFuelTypeFailed(err));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(FormContent);\r\n","import {\r\n  FETCH_BRANDS_BEGIN,\r\n  FETCH_BRANDS_SUCCEED,\r\n  FETCH_BRANDS_FAILED,\r\n  FETCH_MODELS_BEGIN,\r\n  FETCH_MODELS_SUCCEED,\r\n  FETCH_MODELS_FAILED,\r\n  FETCH_FUEL_TYPE_BEGIN,\r\n  FETCH_FUEL_TYPE_SUCCEED,\r\n  FETCH_FUEL_TYPE_FAILED,\r\n} from '../actionTypes';\r\n\r\nexport const getCarBrandsBegin = () => {\r\n  return {\r\n    type: FETCH_BRANDS_BEGIN,\r\n  };\r\n};\r\n\r\nexport const getCarBrandsSucceed = carBrands => {\r\n  return {\r\n    type: FETCH_BRANDS_SUCCEED,\r\n    payload: { carBrands },\r\n  };\r\n};\r\n\r\nexport const getCarBrandsFailed = err => {\r\n  return {\r\n    type: FETCH_BRANDS_FAILED,\r\n    payload: { err },\r\n  };\r\n};\r\n\r\nexport const getCarModelsBegin = () => {\r\n  return {\r\n    type: FETCH_MODELS_BEGIN,\r\n  };\r\n};\r\n\r\nexport const getCarModelsSucceed = carModels => {\r\n  return {\r\n    type: FETCH_MODELS_SUCCEED,\r\n    payload: { carModels },\r\n  };\r\n};\r\n\r\nexport const getCarModelsFailed = err => {\r\n  return {\r\n    type: FETCH_MODELS_FAILED,\r\n    payload: { err },\r\n  };\r\n};\r\n\r\nexport const getCarFuelTypeBegin = () => {\r\n  return {\r\n    type: FETCH_FUEL_TYPE_BEGIN,\r\n  };\r\n};\r\n\r\nexport const getCarFuelTypeSucceed = fuelType => {\r\n  return {\r\n    type: FETCH_FUEL_TYPE_SUCCEED,\r\n    payload: { fuelType },\r\n  };\r\n};\r\n\r\nexport const getCarFuelTypeFailed = err => {\r\n  return {\r\n    type: FETCH_FUEL_TYPE_FAILED,\r\n    payload: { err },\r\n  };\r\n};\r\n","export const FETCH_BRANDS_BEGIN = 'FETCH_BRANDS_BEGIN';\r\nexport const FETCH_BRANDS_SUCCEED = 'FETCH_BRANDS_SUCCEED';\r\nexport const FETCH_BRANDS_FAILED = 'FETCH_BRANDS_FAILED';\r\n\r\nexport const FETCH_MODELS_BEGIN = 'FETCH_MODELS_BEGIN';\r\nexport const FETCH_MODELS_SUCCEED = 'FETCH_MODELS_SUCCEED';\r\nexport const FETCH_MODELS_FAILED = 'FETCH_MODELS_FAILED';\r\n\r\nexport const FETCH_FUEL_TYPE_BEGIN = 'FETCH_FUEL_TYPE_BEGIN';\r\nexport const FETCH_FUEL_TYPE_SUCCEED = 'FETCH_FUEL_TYPE_SUCCEED';\r\nexport const FETCH_FUEL_TYPE_FAILED = 'FETCH_FUEL_TYPE_FAILED';\r\n","export const API_KEY = 'YXV0a2FfYXBpOmF1dGthX2FwaV8yMDE5';\r\nexport const API_URL = 'https://api-dev.mfind.pl/cars';\r\nexport const urlCTA =\r\n  'https://www.mfind.pl/ubezpieczenie-oc-ac/kalkulator-oc-ac';\r\n","import React from 'react';\nimport Header from '../components/Header';\nimport FormContent from './FormContent';\n\nimport Grid from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport { API_KEY, API_URL, urlCTA } from '../API_DATA/api_data';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    backgroundColor: '#fff',\n    height: 'auto',\n    border: '1px solid #eeeeee',\n    padding: 0,\n    paddingBottom: '20px',\n    maxWidth: 370,\n    fontFamily: 'Roboto',\n  },\n\n  content: {\n    flexGrow: 1,\n    height: '60%',\n    width: '100%',\n    marginTop: '20px',\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Grid container className={classes.root}>\n        <Header headerStyle={classes.header} />\n        <FormContent\n          API_URL={API_URL}\n          API_KEY={API_KEY}\n          urlCTA={urlCTA}\n        />\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const initialState = {\r\n  carBrands: [],\r\n  loadingBrands: false,\r\n  carModels: [],\r\n  loadingModels: false,\r\n  carModelsTextFieldEnabled: false,\r\n  carFuelType: [],\r\n  loadingCarFuelType: false,\r\n  carFuelTypeTextFieldEnabled: false,\r\n};\r\n\r\nconst carReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'FETCH_BRANDS_BEGIN':\r\n      return {\r\n        ...state,\r\n        loadingBrands: true,\r\n        error: null,\r\n      };\r\n    case 'FETCH_BRANDS_SUCCEED':\r\n      return {\r\n        ...state,\r\n        loadingBrands: false,\r\n        carBrands: action.payload.carBrands,\r\n      };\r\n    case 'FETCH_BRANDS_FAILED':\r\n      return {\r\n        ...state,\r\n        loadingBrands: false,\r\n        error: action.payload.error,\r\n        carBrands: [],\r\n      };\r\n    case 'FETCH_MODELS_BEGIN':\r\n      return {\r\n        ...state,\r\n        loadingModels: true,\r\n        error: null,\r\n      };\r\n    case 'FETCH_MODELS_SUCCEED':\r\n      return {\r\n        ...state,\r\n        loadingModels: false,\r\n        carModelsTextFieldEnabled: true,\r\n        carModels: action.payload.carModels,\r\n      };\r\n    case 'FETCH_MODELS_FAILED':\r\n      return {\r\n        ...state,\r\n        loadingModels: false,\r\n        error: action.payload.error,\r\n        carModels: [],\r\n      };\r\n    case 'FETCH_FUEL_TYPE_BEGIN':\r\n      return {\r\n        ...state,\r\n        loadingCarFuelType: true,\r\n        error: null,\r\n      };\r\n    case 'FETCH_FUEL_TYPE_SUCCEED':\r\n      return {\r\n        ...state,\r\n        loadingCarFuelType: false,\r\n        carFuelTypeTextFieldEnabled: true,\r\n        carFuelType: action.payload.fuelType,\r\n      };\r\n    case 'FETCH_FUEL_TYPE_FAILED':\r\n      return {\r\n        ...state,\r\n        loadingCarFuelType: false,\r\n        error: action.payload.error,\r\n        carFuelType: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default carReducer;\r\n","import { combineReducers } from 'redux';\r\nimport carReducer from './carReducer';\r\n\r\nexport default combineReducers({\r\n  cars: carReducer,\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport './polyfills';\n\nimport App from './containers/App';\nimport rootReducer from './store/reducers/rootReducer';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk)),\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}